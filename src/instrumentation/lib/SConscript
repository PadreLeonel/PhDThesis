import os
import SCons
from os.path import join
from SCons.Scanner.C import CScanner

Import('env')
oldenv = env
env = oldenv.Clone()

env.Tool('RecursiveScanner')
env.Append(
    CPPPATH = Dir(env['common_dir']), 
    LINKFLAGS = "-lpthread -lboost_system -lboost_thread  -L%s -l%s -Wl,-rpath,'$$ORIGIN'" % (env['lib_dir'], env['libdiag']))


target  = "instrument"
header_install_dir = join(env['include_dir'], "lib%s" % env['libinstrument'])

wildcards = ""
headers = ['instrument.h', 'oracle.h', 'probe.h', 'transaction.h', 'types.h', 'preprocessor.h']
sources = []
common_sources = []

for i in range(4):
  wildcards = join(wildcards, "*")
  sources += env.Glob(wildcards + "cpp")

obj = env.SharedLibrary(target = target, source = sources)
env.Depends(obj, env['libdiag_shared'])
oldenv['libinstrument_shared'] = obj

lib_install = env.Install(env['lib_dir'], obj)
env.Default(lib_install)


for h in headers:
  install = env.Install(header_install_dir, h)
  env.Default(install)
  env.Depends(install, lib_install)

