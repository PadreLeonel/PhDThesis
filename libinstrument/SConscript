import os
import SCons
from os.path import join
from SCons.Scanner.C import CScanner

Import('env')
env = env.Clone()

target  = "instrument"
main_header = File("instrument.h")

sources = Glob("*cpp")

env.Tool('RecursiveScanner')
env.Append(
	CPPPATH = env['common_include_dir'], 
	LDFLAGS = "-lpthread")


obj = env.SharedLibrary(target = target, source = sources)
lib_install = env.Install(env['lib_dir'], obj)

install_headers = env.RecursiveScanner(CScanner().scan, main_header) + [main_header]
install_headers_dest = [join(env['include_dir'], env['libinstrument'], str(f)) for f in install_headers]

install_headers.append(Glob("%s/*" % env['common_include_dir']))
install_headers_dest.append([join(env['include_dir'], env['libinstrument'], os.path.basename(str(f))) for f in Glob("%s/*" % env['common_include_dir'])])

header_install = env.InstallAs(install_headers_dest, install_headers)

env.Default(lib_install, header_install)
