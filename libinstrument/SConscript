import os
import SCons
from os.path import join
from SCons.Scanner.C import CScanner

Import('env')
env = env.Clone()
env.Tool('RecursiveScanner')
env.Append(CPPPATH = env['common_include_dir'], LDFLAGS = "-lpthread")

src_dir = Dir('./').srcnode().abspath

target  = "instrument"

wildcards = ""
headers = []
common_headers = []
sources = []

for i in range(4):
  wildcards = join(wildcards, "*")
  headers += env.Glob(wildcards + "h")
  sources += env.Glob(wildcards + "cpp")
  sources += env.Glob(join("..", "common", "src", wildcards + "cpp"))

common_headers += env.Glob(join(env['common_include_dir'], "*"))
  


obj = env.SharedLibrary(target = target, source = sources)

header_install_dir = join(env['include_dir'], "lib%s" % env['libinstrument'])

lib_install = env.Install(env['lib_dir'], obj)
common_header_install = env.Install(header_install_dir, common_headers)
header_install = env.Install(header_install_dir, headers)

env.Default(lib_install, header_install, common_header_install)
